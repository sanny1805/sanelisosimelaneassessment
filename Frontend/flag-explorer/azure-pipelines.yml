trigger:
  branches:
    include:
      - main

variables:
  AZURE_WEBAPP_NAME: "flagexplorer-ui"
  NODE_VERSION: "16.x"
  WORKING_DIRECTORY: "Frontend/flag-explorer"

stages:
  - stage: Build
    displayName: "Build and Test Flag Explorer UI"
    jobs:
      - job: BuildFrontend
        displayName: "Build and Test Frontend"
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: $(NODE_VERSION)

          - script: |
              cd "$(WORKING_DIRECTORY)"
              npm install
            displayName: "Install Dependencies"

          - script: |
              cd "$(WORKING_DIRECTORY)"
              npm run test -- --watch=false --browsers=ChromeHeadless
            displayName: "Run Unit Tests"

          - script: |
              cd "$(WORKING_DIRECTORY)"
              npm run build --configuration production
            displayName: "Build Flag Explorer UI"

  - stage: Publish
    displayName: "Publish Frontend"
    dependsOn: Build
    jobs:
      - job: PublishFrontend
        displayName: "Publish Artifacts"
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - script: |
              mkdir -p $(Build.ArtifactStagingDirectory)/frontend
              cp -r "$(WORKING_DIRECTORY)/dist/flag-explorer"/* $(Build.ArtifactStagingDirectory)/frontend/
            displayName: "Package Frontend"

          - task: PublishBuildArtifacts@1
            displayName: "Store Build Output"
            inputs:
              pathToPublish: "$(Build.ArtifactStagingDirectory)/frontend"
              artifactName: "frontend-drop"

  - stage: Deploy
    displayName: "Deploy to Azure"
    dependsOn: Publish
    jobs:
      - deployment: DeployWebApp
        displayName: "Deploy Flag Explorer UI to Azure Web App"
        environment: "production"
        pool:
          vmImage: "ubuntu-latest"

        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  displayName: "Download Frontend Build Artifacts"
                  inputs:
                    artifactName: "frontend-drop"
                    downloadPath: "$(Build.ArtifactStagingDirectory)"

                - task: AzureWebApp@1
                  displayName: "Deploy to Azure Web App"
                  inputs:
                    azureSubscription: "Your-Azure-Service-Connection" # Set this up in Azure DevOps
                    appName: "$(AZURE_WEBAPP_NAME)"
                    package: "$(Build.ArtifactStagingDirectory)/frontend"
                    runtimeStack: "NODE|16-lts"
